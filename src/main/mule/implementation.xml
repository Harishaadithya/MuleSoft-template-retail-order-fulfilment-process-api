<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:retail-notifications-system-api="http://www.mulesoft.org/schema/mule/retail-notifications-system-api" xmlns:retail-payment-process-api="http://www.mulesoft.org/schema/mule/retail-payment-process-api"
	xmlns:retail-partners-system-api="http://www.mulesoft.org/schema/mule/retail-partners-system-api"
	xmlns:retail-salesforce-customer-system-api="http://www.mulesoft.org/schema/mule/retail-salesforce-customer-system-api" xmlns:retail-orders-system-api="http://www.mulesoft.org/schema/mule/retail-orders-system-api" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns:retail-product-availability-process-api="http://www.mulesoft.org/schema/mule/retail-product-availability-process-api" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/retail-product-availability-process-api http://www.mulesoft.org/schema/mule/retail-product-availability-process-api/current/mule-retail-product-availability-process-api.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/retail-orders-system-api http://www.mulesoft.org/schema/mule/retail-orders-system-api/current/mule-retail-orders-system-api.xsd
http://www.mulesoft.org/schema/mule/retail-salesforce-customer-system-api http://www.mulesoft.org/schema/mule/retail-salesforce-customer-system-api/current/mule-retail-salesforce-customer-system-api.xsd
http://www.mulesoft.org/schema/mule/retail-partners-system-api http://www.mulesoft.org/schema/mule/retail-partners-system-api/current/mule-retail-partners-system-api.xsd
http://www.mulesoft.org/schema/mule/retail-payment-process-api http://www.mulesoft.org/schema/mule/retail-payment-process-api/current/mule-retail-payment-process-api.xsd
http://www.mulesoft.org/schema/mule/retail-notifications-system-api http://www.mulesoft.org/schema/mule/retail-notifications-system-api/current/mule-retail-notifications-system-api.xsd">

<flow name="checkAvailability" doc:id="3e36bf92-b10d-4ede-9f91-0d883c94038c" >
		<foreach doc:name="For Each OrderItem" doc:id="2e9cb2eb-4055-495d-be36-7729ee26e503" collection="#[vars.inputOrder.orderItems]">
			<set-variable value="#[payload]" doc:name="Set Variable currentItem" doc:id="d59fc4a4-2ec0-454d-957f-2f41668b4067" variableName="currentItem"/>
			<retail-product-availability-process-api:retrieve-availability-for-location doc:name="Get availabilities by location id" doc:id="c1d1884f-63f0-4404-af93-2dd79dfbd948" config-ref="Retail_Product_Availability_Process_API_Config" location-type="#[payload.location.locationType]" product-id="#[payload.productId]" variant-id="#[payload.orderItemId]" location-id="#[payload.location.locationId]" price="#[payload.price]" quantity="#[payload.quantity]"/>
			<ee:transform doc:name="check availability, calculate subtotal, taxPrice, set listPartners, shippingPrice" doc:id="6cb79c4e-3fec-4561-bf22-c3b383c9559d">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/java
---
payload.quantityInStock >= vars.currentItem.quantity]]></ee:set-payload>
			</ee:message>
				<ee:variables>
					<ee:set-variable variableName="listPartners"><![CDATA[%dw 2.0
output application/java
---
if (payload.locationType == "PARTNER") (vars.listPartners + payload) distinctBy $.locationId else vars.listPartners]]></ee:set-variable>
					<ee:set-variable variableName="subtotal"><![CDATA[%dw 2.0
output application/java
---
vars.subtotal + (vars.currentItem.price*vars.currentItem.quantity)]]></ee:set-variable>
					<ee:set-variable variableName="shippingPrice"><![CDATA[%dw 2.0
output application/java
---
if ((payload.locationType == "WAREHOUSE") and (payload.shipping > vars.shippingPrice)) payload.shipping 
	else vars.shippingPrice]]></ee:set-variable>
					<ee:set-variable variableName="taxPrice"><![CDATA[%dw 2.0
output application/java
---
vars.taxPrice + payload.tax]]></ee:set-variable>
				</ee:variables>
		</ee:transform>
			<validation:is-true doc:name="All items must be available" doc:id="02fb2337-2574-479b-8354-aab750e8de61" config-ref="Validation_Config" expression="#[payload]" message="Product is not available" />
		</foreach>
		<ee:transform doc:name="Calculation shippingPrice" doc:id="5f0bebe0-ab03-4a38-8d68-3fbdba0967db">
					<ee:message>
					</ee:message>
			<ee:variables >
				<ee:set-variable variableName="shippingPrice" ><![CDATA[%dw 2.0
output application/java
---
if (vars.listPartners != []) (vars.shippingPrice + (vars.listPartners reduce ((item, sum1 = 0) -> sum1 + (item.shipping)))) else vars.shippingPrice ]]></ee:set-variable>
			</ee:variables>
				</ee:transform>
	</flow>
	<flow name="reserveOrderItems" doc:id="c4fb2a20-aae1-4706-b1c4-40853a5d6d41" >
		<retail-salesforce-customer-system-api:retrieve-customer-contact doc:name="Get customer by customer id" doc:id="8efdc843-798e-47a8-b9ab-c470fa15f56b" target="customerData" config-ref="Retail_Salesforce_Customer_System_API_Config" customer-id="#[vars.inputOrder.customerId]"/>
		<foreach doc:name="For Each" doc:id="10142829-99dd-452b-84c5-0059b298ddc0" collection="#[vars.inputOrder.orderItems]">
			<choice doc:name="Is order placed from Partner?" doc:id="6f5fbf50-245c-48ee-8da1-7e364c5f3662" >
				<when expression='#[payload.location.locationType == "PARTNER"]'>
					<ee:transform doc:name="reservation request for partner" doc:id="0c212d2e-9810-40c3-8213-bfc7dc7dd901" >
						<ee:message >
							<ee:set-payload ><![CDATA[%dw 2.0
output application/json
var postalAddress = vars.customerData.deliveryAddresses filter ($.'type' == "SHIPPING") map {
	address: $.address,
    city: $.city,
    postalCode: $.postalCode,
    state: $.state,
    country: $.country
}
---
{     
  variantId: payload.orderItemId,
  productId: payload.productId,
  quantity: payload.quantity, 
  customerId: vars.inputOrder.customerId,
  name: (vars.customerData.firstName ++ " " ++ vars.customerData.lastName),
  price: payload.price as Number,
  address: postalAddress[0],
  partnerId: payload.location.locationId
}]]></ee:set-payload>
						</ee:message>
					</ee:transform>
					<retail-partners-system-api:create-reservation doc:name="Create reservation" doc:id="904f5fb3-28b1-451a-b724-e72f481ba3b1" config-ref="Retail_Partners_System_API_Config"/>
				</when>
				<otherwise >
					<ee:transform doc:name="reservation request" doc:id="94c1e9f1-a10a-4ed9-8637-4858e3268878">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{     
  "variantId": payload.orderItemId,
  "productId": payload.productId,
  "locationId": payload.location.locationId,
  "locationType": payload.location.locationType, 
  "quantity": payload.quantity, 
  "customerId": vars.inputOrder.customerId   
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
					<retail-product-availability-process-api:create-reservation doc:name="Create reservation" doc:id="b0193d16-d1bf-43f8-b307-13af270c404b" config-ref="Retail_Product_Availability_Process_API_Config"/>
				</otherwise>
			</choice>
		</foreach>
	</flow>
	<flow name="createOrder" doc:id="9faca9b0-60e0-4c7e-b5e6-19a4bc799b0b" >
		<ee:transform doc:name="map input to Order API" doc:id="b7afcb30-605b-4975-bc68-9676ad7ae1a3" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	subtotal: (round(vars.subtotal*100)/100) as String,
	taxPrice: (round(vars.taxPrice*100)/100) as String,
	shippingPrice: (round (vars.shippingPrice*100)/100) as String,
	total: (round ((vars.subtotal + vars.taxPrice + vars.shippingPrice)*100)/100) as String,
	status: "Draft",
	orderItems: {
	  pickupItems : (vars.inputOrder.orderItems filter $.location.locationType == "STORE") 
	  	map (orderItem) -> {
	  		productName: orderItem.productName,
			price: orderItem.price,
			quantity: orderItem.quantity,
			location: orderItem.location,
			productId: orderItem.productId,
			orderItemId: orderItem.orderItemId
	  },
	  shipmentItems : (vars.inputOrder.orderItems filter $.location.locationType == "WAREHOUSE") 
	  	map (orderItem) -> {
			productName: orderItem.productName,
			price: orderItem.price,
			quantity: orderItem.quantity,
			location: orderItem.location,
			productId: orderItem.productId,
			orderItemId: orderItem.orderItemId
	  },
	  partnersItems : (vars.inputOrder.orderItems filter $.location.locationType == "PARTNER") 
	  	map (orderItem) -> {
			productName: orderItem.productName,
			price: orderItem.price,
			quantity: orderItem.quantity,
			location: orderItem.location,
			productId: orderItem.productId,
			orderItemId: orderItem.orderItemId
	  }
	}
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<retail-orders-system-api:create-new-order doc:name="Create Order by customer id" doc:id="54e60d28-d0f5-4ea8-8c15-b52399105eed" config-ref="Retail_Orders_System_API_Config" customer-id="#[vars.inputOrder.customerId]" target="order"/>
	</flow>
	<flow name="updateOrder" doc:id="e32ea376-4879-4574-ab5a-8333d659442a" >
		<retail-orders-system-api:update-order-status doc:name="Update order status" doc:id="fdd0db38-095e-4d82-a4c9-2a616ef2d13e" config-ref="Retail_Orders_System_API_Config" order-id="#[vars.salesOrderId]" target="updateOrderResponse"/>
		<logger level="INFO" doc:name="Log call response" doc:id="e22bdeca-e3e6-4578-92b2-9248ae0feed7" message="vars.updateOrderResponse=#[output application/json --- vars.updateOrderResponse]"/>
		<retail-orders-system-api:retrieve-customer-order doc:name="Retrieve customer order" doc:id="a7ac4eca-f152-48ca-b04d-3b9ed0566089" config-ref="Retail_Orders_System_API_Config" order-id="#[vars.salesOrderId]" target="orderData"/>
		<logger level="INFO" doc:name="Log call response" doc:id="51ed63ff-b555-4390-b129-d91a840ebb80" message="vars.orderData=#[output application/json --- vars.orderData]"/>
		<retail-salesforce-customer-system-api:retrieve-customer-contact doc:name="Retrieve customer contact" doc:id="a0ae0506-e3ad-463b-8979-922cbc52adc5" config-ref="Retail_Salesforce_Customer_System_API_Config" customer-id="#[vars.orderData.customerId]" target="customerData"/>
		<logger level="INFO" doc:name="Log call response" doc:id="4a3cf4e2-ac0e-40fc-af2b-13d32ca8eff1" message="vars.customerData=#[output application/json --- vars.customerData]"/>
		<flow-ref doc:name="Send email notification" doc:id="2428385a-9d42-4105-b244-1a55642ff2db" name="sendNotificationEmail"/>
		<flow-ref doc:name="Send sms notification" doc:id="a9202ff0-abc7-4550-9c11-308946976106" name="sendNotificationSMS"/>
        <set-payload value="#[vars.updateOrderResponse]" doc:name="Status update response" doc:id="62319e3d-86ff-469b-9fdf-11f88e2540b3" />
	</flow>
	<flow name="sendNotificationEmail" doc:id="4cd2552f-dd72-4dd5-99eb-ff42e86fe494" >
		<ee:transform doc:name="Prepare email request" doc:id="2c6abf33-8ab0-43f3-bcbf-03e71e67f63c" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
var pickupItems = vars.orderData.orderItems.pickupItems filter $.location.locationType == "STORE"
var warehouseItems = vars.orderData.orderItems.shipmentItems filter $.location.locationType == "WAREHOUSE"
var partnerItems = vars.orderData.orderItems.partnersItems filter $.location.locationType == "PARTNER"
---
{
    "type": "EMAIL",
    priority: "MINOR",
    recipient: vars.customerData.emailAddress,
    subject: "Order - $(vars.orderData.identifier) | Anypoint Store",
    message: "Hello, 
    Your order [ $(vars.orderData.identifier) ] has been placed.\n\n"
++ (if (pickupItems !=null) ("Items to be picked up in store: \n\n" ++
(pickupItems map (
  		"Product Name:" ++ $.productName ++ "\n"
  		++ "Quantity:" ++ $.quantity ++ "\n"
		++ "Price:" ++ $.price ++ "\n"
	) joinBy "\n")
	++ "-----------------------------\n\n"
) else '') 
++ (if (warehouseItems !=null) ("Items to be shipped: \n\n" ++
(warehouseItems map (
  		"Product Name:" ++ $.productName ++ "\n"
  		++ "Quantity:" ++ $.quantity ++ "\n"
		++ "Price:" ++ $.price ++ "\n"
	) joinBy "\n")
	++ "-----------------------------\n\n"
) else '')
++ (if (partnerItems !=null) ("Items ordered from partners: \n\n" ++
(partnerItems map (
  		"Product Name:" ++ $.productName ++ "\n"
  		++ "Quantity:" ++ $.quantity ++ "\n"
		++ "Price:" ++ $.price ++ "\n"
	) joinBy "\n")
	++ "-----------------------------\n\n"
) else '')
++ "Total price: " ++ ((round (vars.orderData.subtotal as Number + vars.orderData.totalTax as Number + vars.orderData.shippingCost as Number)*100)/100) as String ++ " USD\n\n"
++ "We will inform you about future updates.

Thanks,
MuleSoft Team"  
}
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<retail-notifications-system-api:create-new-notification doc:name="Send e-mail notification" doc:id="ac103468-3795-44ee-a8a5-ffe6ebdfe4df" config-ref="Retail_Notifications_System_API_Config" target="sendEmailResponse"/>
		<logger level="INFO" doc:name="Log call response" doc:id="6c777fd2-582d-4be9-ba5e-4442803fe538" message="vars.sendEmailResponse=#[output application/json --- vars.sendEmailResponse]" />
	</flow>
    <flow name="sendNotificationSMS" doc:id="a9a39185-767d-4449-a52a-0e721465b495" >
        <ee:transform doc:name="Prepare email request" doc:id="7ad474e0-e1f5-4a68-b040-84094314df53" >
            <ee:message >
                <ee:set-payload ><![CDATA[%dw 2.0
output application/json
var pickupItems = vars.orderData.orderItems.pickupItems filter $.location.locationType == "STORE"
var warehouseItems = vars.orderData.orderItems.shipmentItems filter $.location.locationType == "WAREHOUSE"
var partnerItems = vars.orderData.orderItems.partnersItems filter $.location.locationType == "PARTNER"
---
{
    "type": "SMS",
    priority: "MINOR",
    recipient: p('recipient.phone.number'),
    subject: "Order - $(vars.orderData.identifier) | Anypoint Store",
    message: "Hello, Your order has been placed. "
++ "Total price: " ++ ((round (vars.orderData.subtotal as Number + vars.orderData.totalTax as Number + vars.orderData.shippingCost as Number)*100)/100) as String ++ " USD"
++ "We will inform you about future updates. MuleSoft Team"  
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
		<retail-notifications-system-api:create-new-notification doc:name="Send sms notification" doc:id="586379d0-c590-47db-8275-a2cdc7f1ee05" config-ref="Retail_Notifications_System_API_Config" target="sendSmsResponse"/>
        <logger level="INFO" doc:name="Log call response" doc:id="deb832fa-c5c6-4cdd-a2a6-61f756e98a4b" message="vars.sendSmsResponse=#[output application/json --- vars.sendSmsResponse]" />
    </flow>
	</mule>
